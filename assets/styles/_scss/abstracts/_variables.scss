$color-primary: #2f3d55;
$color-secondary:#199ad1;
$color-tertiary:#deff4f;



//$color-secondary:#0000ff45;
$color-black: #000000;
$color-white: #FFFFFF;
$color-grey: #f8f8f8;
$color-text: #a6a8a8;
$color-mission:#eaeae8;

//~~~~~~~~~~~~ Responsive Breakpoints ~~~~~~~~~~~~

/**
 * Breakpoint graph
 * http://www.sassmeister.com/gist/0614ac3971ae82925ef4
 *
 * This are just some breakpoints, test your content change as you will
 * Let the content dictate the breakpoint
 *
 * Example Usage in css:
 *
 * .con {
 *    width: 96%;
 *    margin: 0 auto;
 *
 *    @include respond-to(tablet-large) {
 *      width: 85%;
 *    }
 * }
 */

$breakpoints: ("mobile-small": "( min-width:  20.000em )", "mobile-large": "( min-width:  30.000em )", "tablet-small": "( min-width:  35.000em )", "tablet-large": "( min-width:  50.000em )", "screen-small": "( min-width:  64.000em )", "screen-medium": "( min-width:  75.000em )", "screen-large": "( min-width:  85.000em )", "screen-huge": "( min-width: 100.000em )");

@mixin respond-to($name) {

    // If the key exists in the map
    @if map-has-key($breakpoints, $name) {

        // Prints a media query based on the value
        @media #{map-get($breakpoints, $name)} {
            @content;
        }
    }

    @else {
        // Just warn the user
        @warn "Unfortunately, no value could be retrieved from '#{$name}'. "+"Please make sure it is defined in the '$breakpoints' map. ";
    }
}
